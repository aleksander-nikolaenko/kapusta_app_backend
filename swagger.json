{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Kapusta V1 API docs",
    "description": "Documentaion for financial accounting application",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [{ "url": "http://localhost:5000/api" }, { "url": "heroku url" }],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "User",
      "description": "User endpoints"
    }
  ],

  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",

        "parameters": [],

        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Provided email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationConflictResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "security": [{ "Bearer": [] }]
      }
    },
    "/auth/google": {
      "get": {
        "tags": ["Auth"],
        "summary": "Google registration and authentication",
        "responses": {
          "200": {
            "description": "Successful operation (redirect to front-end with accessToken)",
            "content": {}
          },
          "403": {
            "description": "Not registered",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "minLength": 5,
            "maxLength": 63
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "minLength": 6,
            "maxLength": 100,
            "example": "qwerty123"
          }
        }
      },

      "RegistrationSuccessResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "balance": {
                "type": "number",
                "description": "User's balance",
                "example": "0"
              }
            }
          }
        },
        "example": {
          "user": {
            "email": "user@example.com",
            "balance": 0
          }
        }
      },

      "RegistrationErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "error message"
          }
        }
      },
      "RegistrationConflictResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "error message",
            "example": "Email in use"
          }
        }
      }
    },

    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
