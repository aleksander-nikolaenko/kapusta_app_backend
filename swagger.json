{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Kapusta V1 API docs",
    "description": "Documentaion for financial accounting application",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [
    { "url": "https://kapustaapplication.herokuapp.com/api/" },
    { "url": "http://localhost:5000/api" }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "User",
      "description": "User endpoints"
    },
    {
      "name": "Transaction",
      "description": "Transaction endpoints"
    },
    {
      "name": "Report",
      "description": "Report endpoints"
    },
    {
      "name": "Category",
      "description": "Category endpoints"
    }
  ],

  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],

        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationAndLoginRequest"
              }
            }
          }
        },

        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserObject"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Provided email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationConflictResponse"
                }
              }
            }
          }
        }
      }
    },

    "/auth/google": {
      "get": {
        "tags": ["Auth"],
        "summary": "Google registration and authentication",
        "parameters": [],

        "responses": {
          "200": {
            "description": "Successful operation (redirect to front-end with accessToken)",
            "content": {}
          },
          "403": {
            "description": "Not registered",
            "content": {}
          }
        }
      }
    },

    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User authentication",
        "parameters": [],

        "requestBody": {
          "description": "Login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationAndLoginRequest"
              }
            }
          }
        },

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request(invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Email doesn't exist / Password is wrong",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginErrorResponse"
                }
              }
            }
          }
        }
      }
    },

    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "Logout",
        "security": [{ "Bearer": [] }],
        "parameters": [],

        "responses": {
          "204": {
            "description": "Successful operation",
            "content": {}
          },
          "400": {
            "description": "No token provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoTokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidTokenResponse"
                }
              }
            }
          }
        }
      }
    },

    "/user": {
      "get": {
        "tags": ["User"],
        "summary": "Get user info",
        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserObject"
                }
              }
            }
          },
          "400": {
            "description": "No token provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoTokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidTokenResponse"
                }
              }
            }
          }
        }
      },

      "delete": {
        "tags": ["User"],
        "summary": "Clear all user info",
        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "No token provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoTokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidTokenResponse"
                }
              }
            }
          }
        }
      }
    },

    "/user/balance": {
      "patch": {
        "tags": ["User"],
        "summary": "Update user balance",
        "parameters": [],
        "security": [{ "Bearer": [] }],

        "requestBody": {
          "description": "User's balance object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserBalanceRequest"
              }
            }
          }
        },

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserObject"
                }
              }
            }
          },
          "400": {
            "description": "No token provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoTokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidTokenResponse"
                }
              }
            }
          }
        }
      }
    },

    "/transactions": {
      "post": {
        "tags": ["Transaction"],
        "summary": "Create user transactions",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "requestBody": {
          "description": "Transaction object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransactionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionObject"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidTokenResponse"
                }
              }
            }
          }
        }
      },

      "get": {
        "tags": ["Transaction"],
        "summary": "Get user transactions",
        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          },
          "400": {
            "description": "No token provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoTokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidTokenResponse"
                }
              }
            }
          }
        }
      },

      "delete": {
        "tags": ["Transaction"],
        "summary": "Delete transactions",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteTransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "No token provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoTokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidTokenResponse"
                }
              }
            }
          }
        }
      }
    },

    "/reports": {
      "get": {
        "tags": ["Report"],
        "summary": "Get full report",
        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          },
          "400": {
            "description": "No token provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoTokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidTokenResponse"
                }
              }
            }
          }
        }
      }
    },

    "/reports/monthly-expense": {
      "get": {
        "tags": ["Report"],
        "summary": "Get expense reports by month",
        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          },
          "400": {
            "description": "No token provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoTokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidTokenResponse"
                }
              }
            }
          }
        }
      }
    },

    "/reports/monthly-income": {
      "get": {
        "tags": ["Report"],
        "summary": "Get income reports by month",
        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          },
          "400": {
            "description": "No token provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoTokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidTokenResponse"
                }
              }
            }
          }
        }
      }
    },

    "/categories": {
      "get": {
        "tags": ["Category"],
        "summary": "Get user category list",
        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryListObject"
                }
              }
            }
          },
          "400": {
            "description": "No token provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoTokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidTokenResponse"
                }
              }
            }
          }
        }
      },

      "post": {
        "tags": ["Category"],
        "summary": "Add user category to category list",
        "parameters": [],
        "security": [{ "Bearer": [] }],

        "requestBody": {
          "description": "Category object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddCategoryRequest"
              }
            }
          }
        },

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddCategoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "No token provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoTokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidTokenResponse"
                }
              }
            }
          }
        }
      },

      "delete": {
        "tags": ["Category"],
        "summary": "Delete category from user category list",
        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteCategoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "No token provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoTokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidTokenResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserInfo": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "User ID",
            "example": "630e5122be86e9879b691ce7"
          },
          "name": {
            "type": "string",
            "description": "User name",
            "example": "test"
          },
          "email": {
            "type": "string",
            "description": "User email",
            "format": "email",
            "example": "test@gmail.com"
          },
          "token": {
            "type": "string",
            "description": "User access token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzMGU1MTIyYmU4NmU5ODc5YjY5MWNlNyIsInJvbGVzIjpbIlVTRVIiXSwiaWF0IjoxNjYxODk3MTkxLCJleHAiOjE2NjE5NDAzOTF9.7ExJjGyTzewlvehfunLc2PiRM6Yl_P0tII_rkSEmTJE"
          },
          "balance": {
            "type": "number",
            "description": "User balance",
            "example": "0"
          },
          "categories": {
            "type": "array",
            "description": "User categories list",
            "items": { "type": "string" }
          },
          "roles": {
            "type": "array",
            "description": "User Roles",
            "items": { "type": "string" }
          }
        },
        "example": {
          "_id": "630e5122be86e9879b691ce7",
          "name": "aleksander.nikolaenko.test",
          "email": "aleksander.nikolaenko.test@gmail.com",
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzMGU1MTIyYmU4NmU5ODc5YjY5MWNlNyIsInJvbGVzIjpbIlVTRVIiXSwiaWF0IjoxNjYxODk3MTkxLCJleHAiOjE2NjE5NDAzOTF9.7ExJjGyTzewlvehfunLc2PiRM6Yl_P0tII_rkSEmTJE",
          "balance": 274987,
          "categories": [
            "630d23089692d4e9360ec34d",
            "630d4b6b1a5a5fef811d9a80",
            "630d4d6b78f7810c7f73a07b",
            "630d4e522e4567c937d21b73",
            "630d5145c0670a69b1b72a7f",
            "630d5162c0670a69b1b72a85",
            "630d525f4e71b290d419aac9",
            "630d52734e71b290d419aace",
            "630d52884e71b290d419aad3",
            "630d52984e71b290d419aad8",
            "630d52a14e71b290d419aadd",
            "630d52b74e71b290d419aae2",
            "630d52c34e71b290d419aae7",
            "630e3273144cc4543b17742f"
          ],
          "roles": ["USER"],
          "createdAt": "2022-08-30T18:04:18.596Z"
        }
      },

      "UserObject": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "User ID",
                "example": "630e5122be86e9879b691ce7"
              },
              "name": {
                "type": "string",
                "description": "User name",
                "example": "test"
              },
              "email": {
                "type": "string",
                "description": "User email",
                "format": "email",
                "example": "test@gmail.com"
              },
              "token": {
                "type": "string",
                "description": "User access token",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzMGU1MTIyYmU4NmU5ODc5YjY5MWNlNyIsInJvbGVzIjpbIlVTRVIiXSwiaWF0IjoxNjYxODk3MTkxLCJleHAiOjE2NjE5NDAzOTF9.7ExJjGyTzewlvehfunLc2PiRM6Yl_P0tII_rkSEmTJE"
              },
              "balance": {
                "type": "number",
                "description": "User balance",
                "example": "0"
              },
              "categories": {
                "type": "array",
                "description": "User categories list",
                "items": { "type": "string" }
              },
              "roles": {
                "type": "array",
                "description": "User Roles",
                "items": { "type": "string" }
              }
            },
            "example": {
              "_id": "630e5122be86e9879b691ce7",
              "name": "aleksander.nikolaenko.test",
              "email": "aleksander.nikolaenko.test@gmail.com",
              "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzMGU1MTIyYmU4NmU5ODc5YjY5MWNlNyIsInJvbGVzIjpbIlVTRVIiXSwiaWF0IjoxNjYxODk3MTkxLCJleHAiOjE2NjE5NDAzOTF9.7ExJjGyTzewlvehfunLc2PiRM6Yl_P0tII_rkSEmTJE",
              "balance": 274987,
              "categories": [
                "630d23089692d4e9360ec34d",
                "630d4b6b1a5a5fef811d9a80",
                "630d4d6b78f7810c7f73a07b",
                "630d4e522e4567c937d21b73",
                "630d5145c0670a69b1b72a7f",
                "630d5162c0670a69b1b72a85",
                "630d525f4e71b290d419aac9",
                "630d52734e71b290d419aace",
                "630d52884e71b290d419aad3",
                "630d52984e71b290d419aad8",
                "630d52a14e71b290d419aadd",
                "630d52b74e71b290d419aae2",
                "630d52c34e71b290d419aae7",
                "630e3273144cc4543b17742f"
              ],
              "roles": ["USER"],
              "createdAt": "2022-08-30T18:04:18.596Z"
            }
          }
        },
        "example": {
          "user": {
            "_id": "630e5122be86e9879b691ce7",
            "name": "aleksander.nikolaenko.test",
            "email": "aleksander.nikolaenko.test@gmail.com",
            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzMGU1MTIyYmU4NmU5ODc5YjY5MWNlNyIsInJvbGVzIjpbIlVTRVIiXSwiaWF0IjoxNjYxODk3MTkxLCJleHAiOjE2NjE5NDAzOTF9.7ExJjGyTzewlvehfunLc2PiRM6Yl_P0tII_rkSEmTJE",
            "balance": 274987,
            "categories": [
              "630d23089692d4e9360ec34d",
              "630d4b6b1a5a5fef811d9a80",
              "630d4d6b78f7810c7f73a07b",
              "630d4e522e4567c937d21b73",
              "630d5145c0670a69b1b72a7f",
              "630d5162c0670a69b1b72a85",
              "630d525f4e71b290d419aac9",
              "630d52734e71b290d419aace",
              "630d52884e71b290d419aad3",
              "630d52984e71b290d419aad8",
              "630d52a14e71b290d419aadd",
              "630d52b74e71b290d419aae2",
              "630d52c34e71b290d419aae7",
              "630e3273144cc4543b17742f"
            ],
            "roles": ["USER"],
            "createdAt": "2022-08-30T18:04:18.596Z"
          }
        }
      },

      "UserDeleteResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "message",
            "example": "User deleted"
          },
          "user": { "$ref": "#/components/schemas/UserInfo" }
        }
      },

      "UserBalanceRequest": {
        "type": "object",
        "properties": {
          "balance": {
            "type": "number",
            "description": "User's balance",
            "example": "123.45"
          }
        }
      },

      "TransactionInfo": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Transaction ID",
            "example": "630e3273144cc4543b17742f"
          },
          "date": {
            "type": "string",
            "description": "Transaction date",
            "example": "1999-11-25"
          },
          "description": {
            "type": "string",
            "description": "Transaction description",
            "example": "Beef"
          },
          "category": {
            "type": "string",
            "description": "Transaction category ID",
            "example": "630d23089692d4e9360ec34d"
          },
          "value": {
            "type": "number",
            "description": "Transaction amount",
            "example": "0"
          },
          "type": {
            "type": "string",
            "description": "Transaction type",
            "example": "expenses"
          },
          "owner": {
            "type": "array",
            "description": "Transaction owner ID",
            "example": "630e3273144cc4543b17742f"
          }
        },
        "example": {
          "transaction": {
            "_id": "630e5122be86e9879b691ce7",
            "date": "2022-08-30",
            "description": "Beef",
            "category": "630d23089692d4e9360ec34d",
            "value": 2749,
            "type": "expenses",
            "owner": "630d52884e71b290d419aad3",
            "createdAt": "2022-08-30T18:04:18.596Z"
          }
        }
      },

      "TransactionObject": {
        "type": "object",
        "properties": {
          "transaction": {
            "_id": {
              "type": "string",
              "description": "Transaction ID",
              "example": "630e3273144cc4543b17742f"
            },
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "description": "Transaction date",
                "example": "1999-11-25"
              },
              "description": {
                "type": "string",
                "description": "Transaction description",
                "example": "Beef"
              },
              "category": {
                "type": "string",
                "description": "Transaction category ID",
                "example": "630e3273144cc4543b17742f"
              },
              "value": {
                "type": "number",
                "description": "Transaction amount",
                "example": "0"
              },
              "type": {
                "type": "string",
                "description": "Transaction type",
                "example": "expenses"
              },
              "owner": {
                "type": "array",
                "description": "Transaction owner ID",
                "example": "630e3273144cc4543b17742f"
              }
            }
          }
        },
        "example": {
          "transaction": {
            "_id": "630e5122be86e9879b691ce7",
            "date": "2022-08-30",
            "description": "Beef",
            "category": "630d23089692d4e9360ec34d",
            "value": 2749,
            "type": "expenses",
            "owner": "630d52884e71b290d419aad3",
            "createdAt": "2022-08-30T18:04:18.596Z"
          }
        }
      },

      "CreateTransactionRequest": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "Transaction date",
            "example": "1999-11-25"
          },
          "description": {
            "type": "string",
            "description": "Transaction description",
            "example": "Beef"
          },
          "category": {
            "type": "string",
            "description": "Transaction category ID",
            "example": "630d23089692d4e9360ec34d"
          },
          "value": {
            "type": "number",
            "description": "Transaction amount",
            "example": "0"
          },
          "type": {
            "type": "string",
            "description": "Transaction type",
            "example": "expenses"
          }
        },
        "example": {
          "date": "2022-08-31",
          "description": "Beef",
          "category": "630d23089692d4e9360ec34d",
          "value": 300,
          "type": "expenses"
        }
      },

      "DeleteTransactionResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Transaction delete message",
            "example": "Transactions deleted"
          },
          "transaction": {
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "description": "Transaction date",
                "example": "1999-11-25"
              },
              "description": {
                "type": "string",
                "description": "Transaction description",
                "example": "Beef"
              },
              "category": {
                "type": "string",
                "description": "Transaction category ID",
                "example": "630e3273144cc4543b17742f"
              },
              "value": {
                "type": "number",
                "description": "Transaction amount",
                "example": "0"
              },
              "type": {
                "type": "string",
                "description": "Transaction type",
                "example": "expenses"
              }
            }
          }
        },
        "example": {
          "message": "Transactions deleted",
          "transaction": {
            "date": "2022-08-30",
            "description": "Beef",
            "category": "630d23089692d4e9360ec34d",
            "value": 300,
            "type": "expenses"
          }
        }
      },

      "CategoryInfo": {
        "type": "object",
        "description": "User category",
        "properties": {
          "properties": {
            "_id": {
              "type": "string",
              "description": "Category ID",
              "example": "630d23089692d4e9360ec34d"
            },
            "name": {
              "type": "string",
              "description": "Category name",
              "example": "Products"
            },
            "type": {
              "type": "string",
              "description": "Category type",
              "example": "expenses"
            },
            "default": {
              "type": "boolean",
              "description": "Category is default",
              "example": true
            }
          }
        },
        "example": {
          "_id": "630d5145c0670a69b1b72a7f",
          "name": "Transport",
          "type": "expenses",
          "default": true
        }
      },

      "CategoryList": {
        "type": "array",
        "description": "User categories list",
        "items": {
          "type": "object",
          "description": "User category",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Category ID",
              "example": "630d23089692d4e9360ec34d"
            },
            "name": {
              "type": "string",
              "description": "Category name",
              "example": "Products"
            },
            "type": {
              "type": "string",
              "description": "Category type",
              "example": "expenses"
            },
            "default": {
              "type": "boolean",
              "description": "Category is default",
              "example": true
            }
          }
        },
        "example": [
          {
            "_id": "630d23089692d4e9360ec34d",
            "name": "Products",
            "type": "expenses",
            "default": true
          },
          {
            "_id": "630d4b6b1a5a5fef811d9a80",
            "name": "Alcohol",
            "type": "expenses",
            "default": true
          },
          {
            "_id": "630d4e522e4567c937d21b73",
            "name": "Health",
            "type": "expenses",
            "default": true
          }
        ]
      },

      "CategoryListObject": {
        "type": "object",
        "description": "User category",
        "properties": {
          "categoryList": { "$ref": "#/components/schemas/CategoryList" }
        }
      },

      "AddCategoryRequest": {
        "type": "object",
        "description": "User category",
        "properties": {
          "properties": {
            "name": {
              "type": "string",
              "description": "Category name",
              "example": "Products"
            },
            "type": {
              "type": "string",
              "description": "Category type",
              "example": "expenses"
            }
          }
        },
        "example": {
          "name": "Transport",
          "type": "expenses"
        }
      },

      "AddCategoryResponse": {
        "type": "object",
        "description": "User category",
        "properties": {
          "message": {
            "type": "string",
            "description": "Category add response message",
            "example": "Category added"
          },
          "user": { "$ref": "#/components/schemas/UserInfo" }
        }
      },

      "DeleteCategoryResponse": {
        "type": "object",
        "description": "User category",
        "properties": {
          "message": {
            "type": "string",
            "description": "Category delete response message",
            "example": "Category deleted"
          },
          "user": { "$ref": "#/components/schemas/UserInfo" }
        }
      },

      "RegistrationAndLoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "minLength": 5,
            "maxLength": 63
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "minLength": 6,
            "maxLength": 100,
            "example": "qwerty123"
          }
        }
      },

      "RegistrationConflictResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "error message",
            "example": "Email in use"
          }
        }
      },

      "LoginSuccessResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "description": "user access token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiI1ZmMyMDg1YmQwOTM2NTI4MTA3Y2UyNzQiLCJzaWQiOiI1ZmMyZDJmY2UxZDIwNTA2NzAyYmRkMjIiLCJpYXQiOjE2MDY2MDM1MTYsImV4cCI6MTYwNjYwNzExNn0.rJ_QjU4KvA76H96RHsvOBChK0Vjbd0NmqjMxdQVJIXA"
          }
        }
      },

      "LoginErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "error message",
            "example": "Email or password wrong"
          }
        }
      },

      "NoTokenResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "error message",
            "example": "Missing authentication token"
          }
        }
      },

      "InvalidTokenResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "error message",
            "example": "Not authorized"
          }
        }
      },

      "ErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "error message"
          }
        }
      }
    },

    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
